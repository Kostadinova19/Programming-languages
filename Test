package exercise2;

public class Test {
	    private String s;

	    public Test(String s) {
	        this.s = s;
	    }

	    public Test() {
	        this.s = "Programming languages";
	    }
	    public void method1() {
	        System.out.println(s);
	    }

	    public void method2(int n) {
	        System.out.println(n);
	    }

	    private void method3() {
	        System.out.println("Private method is invoked");
	    }

	    public static void main(String[] args) {
	    
	        Test testDefault = new Test();
	        testDefault.method1();
	        testDefault.method2(42);
	        Test testWithParameter = new Test("Hello, World!");
	        testWithParameter.method1();
	        testWithParameter.method2(99);
	    }
	}

package exercise2;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

public class Main {
    public static void main(String[] args) {
    
        Test testObject = new Test();

        Class<?> clazz = testObject.getClass();
        System.out.println("The name of class is " + clazz.getSimpleName());

        Constructor<?>[] constructors = clazz.getConstructors();
        System.out.println("The name of constructor is " + constructors[0].getName());

        System.out.println("The public methods of class are:");
        Method[] methods = clazz.getMethods();
        for (Method method : methods) {
            System.out.println("Method name: " + method.getName());
        }
    }
}
